services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:17-alpine
    container_name: overland-postgres-dev
    restart: unless-stopped
    profiles:
      - development
      - database
    environment:
      POSTGRES_DB: overland
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    # Host ports for development access
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d overland']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Payload CMS (Development)
  cms:
    build:
      context: .
      dockerfile: apps/cms/Dockerfile
      target: base
    container_name: overland-cms-dev
    restart: unless-stopped
    profiles:
      - development
      - cms
    environment:
      NODE_ENV: development
      DATABASE_URI: postgresql://postgres:password@postgres:5432/overland
      PAYLOAD_SECRET: ${PAYLOAD_SECRET:-your-secret-key-here}
      PAYLOAD_PUBLIC_SERVER_URL: ${PAYLOAD_PUBLIC_SERVER_URL:-http://localhost:3001}
      PAYLOAD_PUBLIC_CMS_URL: ${PAYLOAD_PUBLIC_CMS_URL:-http://localhost:3001/admin}
      CMS_PORT: 3001
      # Security settings (more permissive for development)
      ENABLE_CSRF: ${ENABLE_CSRF:-false}
      ENABLE_RATE_LIMITING: ${ENABLE_RATE_LIMITING:-false}
      ENABLE_CORS: ${ENABLE_CORS:-true}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
    # Host ports for development access
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      # Mount source code for live reloading (excluding node_modules)
      - ./apps/cms/src:/app/apps/cms/src
      - ./apps/cms/public:/app/apps/cms/public
      - ./apps/cms/next.config.mjs:/app/apps/cms/next.config.mjs
      - ./apps/cms/tsconfig.json:/app/apps/cms/tsconfig.json
      - ./apps/cms/package.json:/app/apps/cms/package.json
      - ./apps/cms/next-env.d.ts:/app/apps/cms/next-env.d.ts
      # Preserve uploads and node_modules
      - cms_uploads_dev:/app/apps/cms/uploads
      - cms_node_modules:/app/apps/cms/node_modules
    command: pnpm --filter cms dev
    healthcheck:
      test: ['CMD-SHELL', 'curl -f http://localhost:3001/admin || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data_dev:
    driver: local
  cms_uploads_dev:
    driver: local
  cms_node_modules:
    driver: local

networks:
  default:
    name: overland-network-dev
